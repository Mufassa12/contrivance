version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: contrivance-postgres
    environment:
      POSTGRES_DB: contrivance
      POSTGRES_USER: contrivance_user
      POSTGRES_PASSWORD: contrivance_password
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    networks:
      - contrivance-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U contrivance_user -d contrivance"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Authentication Service
  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    container_name: contrivance-auth
    environment:
      - DATABASE_URL=postgresql://contrivance_user:contrivance_password@postgres:5432/contrivance
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production-please
      - PORT=8001
      - RUST_LOG=info
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - contrivance-network
    restart: unless-stopped

  # User Service
  user-service:
    build:
      context: .
      dockerfile: services/user-service/Dockerfile
    container_name: contrivance-user
    environment:
      - DATABASE_URL=postgresql://contrivance_user:contrivance_password@postgres:5432/contrivance
      - AUTH_SERVICE_URL=http://auth-service:8001
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production-please
      - PORT=8002
      - RUST_LOG=info
    ports:
      - "8002:8002"
    depends_on:
      - postgres
      - auth-service
    networks:
      - contrivance-network
    restart: unless-stopped

  # Contrivance Service (Core spreadsheet functionality)
  contrivance-service:
    build:
      context: .
      dockerfile: services/contrivance-service/Dockerfile
    container_name: contrivance-core
    environment:
      - DATABASE_URL=postgresql://contrivance_user:contrivance_password@postgres:5432/contrivance
      - AUTH_SERVICE_URL=http://auth-service:8001
      - USER_SERVICE_URL=http://user-service:8002
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production-please
      - PORT=8003
      - RUST_LOG=info
    ports:
      - "8003:8003"
    depends_on:
      - postgres
      - auth-service
      - user-service
    networks:
      - contrivance-network
    restart: unless-stopped

  # Salesforce Integration Service
  salesforce-service:
    build:
      context: .
      dockerfile: services/salesforce-service/Dockerfile
    container_name: contrivance-salesforce
    environment:
      - DATABASE_URL=postgresql://contrivance_user:contrivance_password@postgres:5432/contrivance
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production-please
      - PORT=8004
      - RUST_LOG=info
      - SALESFORCE_CLIENT_ID=${SALESFORCE_CLIENT_ID}
      - SALESFORCE_CLIENT_SECRET=${SALESFORCE_CLIENT_SECRET}
      - SALESFORCE_INSTANCE_URL=https://login.salesforce.com
    ports:
      - "8004:8004"
    depends_on:
      - postgres
      - auth-service
    networks:
      - contrivance-network
    restart: unless-stopped

  # Gateway Service (API Gateway)
  gateway-service:
    build:
      context: .
      dockerfile: services/gateway-service/Dockerfile
    container_name: contrivance-gateway
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8001
      - USER_SERVICE_URL=http://user-service:8002
      - CONTRIVANCE_SERVICE_URL=http://contrivance-service:8003
      - SALESFORCE_SERVICE_URL=http://salesforce-service:8004
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production-please
      - GROK_API_KEY=${GROK_API_KEY}
      - PORT=8080
      - RATE_LIMIT_REQUESTS=100
      - RATE_LIMIT_WINDOW_SECONDS=60
      - RUST_LOG=info
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - user-service
      - contrivance-service
      - salesforce-service
    networks:
      - contrivance-network
    restart: unless-stopped

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: contrivance-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
    ports:
      - "3000:3000"
    depends_on:
      - gateway-service
    networks:
      - contrivance-network
    restart: unless-stopped

  # Redis for caching and sessions (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: contrivance-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - contrivance-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  contrivance-network:
    driver: bridge